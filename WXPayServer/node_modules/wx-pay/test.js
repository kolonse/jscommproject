/**
 * Created by Administrator on 2015/10/27.
 * 测试用例
 */
var WXSig = require("./lib/wxSig");
var WXParse = require("./lib/wxParse");
var assert = require("assert");
var crypto = require("crypto");
describe("check wxsig", function() {
    it("should equal", function(done) {
        var wxsig = WXSig({
            wxpaykey: "192006250b4c09247ec02edce69f6a2d"
        });
        var str = wxsig.RawSig({
            appid: "wxd930ea5d5a258f4f",
            mch_id: 10000100,
            device_info: 1000,
            body: "test",
            nonce_str: "ibuaiVcKdpRxkhJA",
        });
        assert.equal(str, "9A0A8659F005D6984697E2CA0A9CF3B7", "error");
        done();
    });
});

describe("check wxparse", function() {
    it("should equal", function(done) {
        var wxparse = WXParse({
            wxpaykey: "192006250b4c09247ec02edce69f6a2d"
        });
        var str = wxparse.toWXPayXml({ test1: "test1" });
        console.log(str);
        done();
    });
});

describe("check sort", function() {
    it("should equal", function(done) {
        var data = {
            appid: "1",
            mch_id: 2,
            device_info: 3,
            body: "4",
            nonce_str: "5",
        };
        var wxsig = WXSig({
            wxpaykey: "192006250b4c09247ec02edce69f6a2d"
        });
        console.log(wxsig._Sort(data));
        // assert.equal(wxsig._Sort(data), "appid=1&body=4&", "error");
        done();
    });
});